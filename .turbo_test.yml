env:
  APP_DOMAIN:             localhost:3000
  APP_PROTOCOL:           http://
  COVERAGE:               false
  COVERAGE_REPORTS_TOTAL: 0
  DATABASE_URL_TEST:      postgres:///Forem_test
  DEFAULT_EMAIL:          yo@dev.to
  DISABLE_SPRING:         false
  FASTLY_API_KEY:         ''
  FASTLY_API_KEY:         fake-key
  FASTLY_SERVICE_ID:      ''
  FASTLY_SERVICE_ID:      fake-service-id
  FOREM_OWNER_SECRET:     secret
  GITHUB_KEY:             dummy
  GITHUB_SECRET:          dummy
  HEROKU_APP_URL:         practicaldev.herokuapp.com
  OPENRESTY_URL:          http://localhost:9090
  RAILS_ENV:              test
  RUBYOPT:                '-W:deprecated'
  SECRET_KEY_BASE:        dummydummydummy

install: |
  # clear_cache: 9a63cfbdcda47ec7f46da5bdcd932b9b
  echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections

  sudo apt update -y
  sudo apt install wget -y

  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
  echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list

  wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
  sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'

  sudo add-apt-repository ppa:redislabs/redis -y

  sudo apt update -y

  sudo apt install -y \
    software-properties-common build-essential \
    gcc g++ make cmake unzip libffi-dev \
    libcurl4-openssl-dev libssl-dev zlib1g-dev \
    postgresql-12 postgresql-client-12 postgresql-contrib libpq-dev \
    imagemagick \
    redis \
    chromium-chromedriver libnss3 xdg-utils google-chrome-stable

  sudo systemctl enable --now redis-server.service

  sudo su postgres -c 'createuser ubuntu --superuser'
  sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/12/main/pg_hba.conf
  sudo service postgresql restart

  bash <( wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh )
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use
  nvm install 14.14
  npm install -g yarn

  echo "source ~/.bashrc" >> ~/.bash_profile
  echo "source ~/.nvm/nvm.sh" >> ~/.bash_profile
  echo "nvm use 14.14" >> ~/.bash_profile

  sudo apt-add-repository -y ppa:rael-gc/rvm
  sudo apt-get update -y
  sudo apt-get install rvm -y
  sudo chown -R ubuntu /usr/share/rvm
  sudo usermod -a -G rvm ubuntu
  source /etc/profile.d/rvm.sh
  echo "source /etc/profile.d/rvm.sh" >> ~/.bash_profile

  rvm install "ruby-3.0.2"

  cp .env_sample .env

  echo "gem: --no-document" >> ~/.gemrc
  gem install bundler

  bundle config set path 'vendor/bundle'
  bundle install --local --jobs 3
  bundle exec spring binstub --all

  bin/rails db:create
  bin/rails db:schema:load
  bin/rails webdrivers:chromedriver:update

  yarn install --ignore-engines --frozen-lockfile
  bin/rails webpacker:compile

setup: |
  yarn install --ignore-engines
  bundle install --local --jobs 3
  bundle exec spring binstub --all
  bin/rails db:migrate
  bin/rails webpacker:compile
  bin/rails webdrivers:chromedriver:update

test_suite:
  command: bin/rspec --no-color

  files:
    - spec/**/*_spec.rb
    # - spec/services/fastly_config/snippets_spec.rb
    # - spec/models/*_spec.rb

  ignore:
    - spec/factories/**/*.*
    - spec/support/**/*.*
    - spec/system/**/*.*
    - spec/spec_helper.rb
    - spec/tasks/**/*.*